
# Lex rule:

# Import has to come before Ident because Ident matches "import"
Lex = Import / Ident / EnumConst / Num / LParen / RParen / Eq / Semi / Dot / WS;

LParen = '('; 
RParen = ')'; 
Eq = '=';
Semi = ';';
Dot = '.';
Digit = [0-9];
Import = "import";

WS = (' ' / '\t' / '\n' / '\r' / '\f')*;

Ident = [a-zA-Z_][a-zA-Z0-9_]*;

EnumConst = '#' Ident;

Num = Digit+ / Digit* Dot Digit+ [fF]?;

# Post-lex grammar:

Program = ^ WS (ImportStatement WS)* (Statement WS)+;

ImportStatement = Import WS import:Package WS Semi;

Package = Ident (Dot Package)?;

Statement = statement:(lvalue:Ident WS Eq WS expr:Expr WS Semi);

Expr[5] = '(' WS Expr WS ')';

Expr[4] = Ident / EnumConst / Num;

Expr[3] = '-'+ Expr;

Expr[2] = Expr WS (('*' / '/') WS Expr)+;

Expr[1] = Expr WS (('+' / '-') WS Expr)+;

